<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  
  <!-- Application Configurations -->
  <PropertyGroup>
    <SolutionFileName>Proteus.AppMessageBus.sln</SolutionFileName>
    <NUnit-ToolPath>packages\NUnit.ConsoleRunner.3.5.0\tools</NUnit-ToolPath> 
	<Test-Assemblies-List>build\Debug\Proteus.AppMessageBus.Tests.dll</Test-Assemblies-List>	
  </PropertyGroup>
   
  <ItemGroup>
    <AllProjects Include="**\*.csproj" />
  </ItemGroup>
   
  <Target Name="Clean">
    <MSBuild Projects="@(AllProjects)" Targets="Clean" />
  </Target>  
 
  <Target Name="Compile">
    <MSBuild Projects="@(AllProjects)" Targets="Build" Properties="WarningLevel=1" />
  </Target>
     
  <Target Name="Test" DependsOnTargets="Clean;NuGetRestore;Compile">
        <Exec ContinueOnError="false" Command="dotnet test .\test\Proteus.AppMessageBus.Tests\Proteus.AppMessageBus.Tests.csproj" />
  </Target>
  
  <!-- Have to set ContinueOnError="true" b/c Doxygen will return an error is the LaTex infrastructure isn't present -->
  <Target Name="ApiReferenceDocs">
        <Exec ContinueOnError="true" Command="tools\doxygen\doxygen.exe src\proteus.appmessagebus.doxygen " />
  </Target>
  
  <Target Name="NuGetRestore">
        <Exec ContinueOnError="false" Command="tools\NuGet\nuget.exe restore" />
  </Target>
  
  
  
  <!-- default 'Build' target doesn't need to invoke Test target b/c CI server will auto-discover test assemblies on run -->
  <!-- UPDATE: auto-discover in the CI enviroment results in a (failed) run via the nunit console so have to re-wire Test task up from Build task again --> 
  <Target Name="Build" DependsOnTargets="NuGetRestore;BuildSolution;Test;ApiReferenceDocs" />
 
  <Target Name="BuildSolution">
    <MSBuild Projects="$(SolutionFileName)" />
  </Target>
 
</Project>